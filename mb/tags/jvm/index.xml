<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jvm on 程序猫大刚</title><link>/mb/tags/jvm/</link><description>Recent content in jvm on 程序猫大刚</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 12 Aug 2022 10:30:06 +0800</lastBuildDate><atom:link href="/mb/tags/jvm/index.xml" rel="self" type="application/rss+xml"/><item><title>Java发展历史</title><link>/mb/post/jvm/Java%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/</link><pubDate>Fri, 12 Aug 2022 10:30:06 +0800</pubDate><guid>/mb/post/jvm/Java%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/</guid><description>Java发展历史 1995年5月23 Oak语言更名为Java 1996年1月23 JDK 1.0发布 1997年2月19日JDK 1.1发布 技术代表：JDBC，JAR文件格式，JavaBeans，RMI。 1998年1</description></item><item><title>垃圾判定算法与4大引用</title><link>/mb/post/jvm/%E5%9E%83%E5%9C%BE%E5%88%A4%E5%AE%9A%E7%AE%97%E6%B3%95%E4%B8%8E4%E5%A4%A7%E5%BC%95%E7%94%A8/</link><pubDate>Wed, 10 Aug 2022 22:13:41 +0800</pubDate><guid>/mb/post/jvm/%E5%9E%83%E5%9C%BE%E5%88%A4%E5%AE%9A%E7%AE%97%E6%B3%95%E4%B8%8E4%E5%A4%A7%E5%BC%95%E7%94%A8/</guid><description>哪些区域需要垃圾收集 在熟悉Java内存区域文中，指出了JVM运行时数据区有堆、方法区、虚拟机栈、本地方法栈和程序计数器5个部分，后3个部分都是线程私有的，其中的数据会跟随线程死亡自动回收，所以不需要垃</description></item><item><title>如何计算Java对象的大小</title><link>/mb/post/jvm/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97Java%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F/</link><pubDate>Tue, 09 Aug 2022 18:11:01 +0800</pubDate><guid>/mb/post/jvm/%E5%A6%82%E4%BD%95%E8%AE%A1%E7%AE%97Java%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%A7%E5%B0%8F/</guid><description>关键点 Java对象的布局结构 借助jol-core包来打印对象 引用的指针压缩 对象布局 Java对象布局（Java Object Layout） String对象例子 int[]数组对象例子 引用的指针压缩 JVM内存寻址最大内</description></item><item><title>熟悉HotSpot中的对象</title><link>/mb/post/jvm/%E7%86%9F%E6%82%89HotSpot%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1/</link><pubDate>Tue, 09 Aug 2022 17:50:54 +0800</pubDate><guid>/mb/post/jvm/%E7%86%9F%E6%82%89HotSpot%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1/</guid><description>对象的内存布局 在HotSpot虚拟机中，对象的内存布局分为以下3个区域： 对象头 实例数据 对齐填充 对象头 对象头包含Mark Word和类型指针2个部分。如果是数组对象，则有一部分存储数组的长度。 Mark Word中</description></item><item><title>深入类加载机制</title><link>/mb/post/jvm/%E6%B7%B1%E5%85%A5%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link><pubDate>Fri, 08 Jul 2022 12:16:51 +0800</pubDate><guid>/mb/post/jvm/%E6%B7%B1%E5%85%A5%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid><description>类的生命周期 加载 验证 文件格式验证，元数据验证（语义校验），字节码验证（逻辑校验），符号引用校验 准备 为类变量(static的）分配内存并赋初始值。 解析 主要针对： 类或接口：CONSTANT_Class_i</description></item><item><title>java之深入jvm之路</title><link>/mb/post/java/java%E4%B9%8B%E6%B7%B1%E5%85%A5jvm%E4%B9%8B%E8%B7%AF/</link><pubDate>Sat, 14 Dec 2019 14:45:07 +0000</pubDate><guid>/mb/post/java/java%E4%B9%8B%E6%B7%B1%E5%85%A5jvm%E4%B9%8B%E8%B7%AF/</guid><description>1.仔细看一看java 1.1.java发展历史 1995年5月23 Oak语言更名为Java 1996年1月23 JDK 1.0发布 1997年2月19日JDK 1.1发布 技术代表：JDBC，JAR文件格式，JavaB</description></item></channel></rss>