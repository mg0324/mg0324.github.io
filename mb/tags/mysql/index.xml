<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on 程序猫大刚</title><link>/mb/tags/mysql/</link><description>Recent content in mysql on 程序猫大刚</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 30 Dec 2016 17:37:50 +0000</lastBuildDate><atom:link href="/mb/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>mysql下的内容发布中文章的上一条和下一条解决方案</title><link>/mb/post/mysql/mysql%E4%B8%8B%E7%9A%84%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E4%B8%AD%E6%96%87%E7%AB%A0%E7%9A%84%E4%B8%8A%E4%B8%80%E6%9D%A1%E5%92%8C%E4%B8%8B%E4%B8%80%E6%9D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 30 Dec 2016 17:37:50 +0000</pubDate><guid>/mb/post/mysql/mysql%E4%B8%8B%E7%9A%84%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E4%B8%AD%E6%96%87%E7%AB%A0%E7%9A%84%E4%B8%8A%E4%B8%80%E6%9D%A1%E5%92%8C%E4%B8%8B%E4%B8%80%E6%9D%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>问题场景 在内容发布系统中，都会有类似下图的需求。 遇到的问题 其实“上一条，下一条”的需求，转化到实现其实就是数据库的sql查询上了。 通过当前记录，查询到所在排序中的上一条记录，和下一条记录。 在oracl</description></item><item><title>alisql的my.cnf</title><link>/mb/post/alisql/alisql%E7%9A%84my-cnf/</link><pubDate>Fri, 04 Nov 2016 16:42:24 +0000</pubDate><guid>/mb/post/alisql/alisql%E7%9A%84my-cnf/</guid><description>[mysqld] socket = /tmp/mysql.sock datadir = /usr/local/mysql/data tmpdir = /tmp port = 3030 back_log = 3000 character_set_server = utf8 max_connect_errors = 100 max_connections = 650 max_user_connections = 650 max_heap_table_size = 64M max_allowed_packet = 1024M max_binlog_size = 500M thread_stack = 256K interactive_timeout = 7200 wait_timeout = 86400 sort_buffer_size = 704KB read_buffer_size = 704KB read_rnd_buffer_size = 352KB join_buffer_size = 352KB net_buffer_length = 16K thread_cache_size = 100 ft_min_word_len = 4 transaction_isolation = READ-COMMITTED tmp_table_size = 2097152 table_open_cache = 2000 skip_name_resolve core-file lower_case_table_names = 1 log_bin_trust_function_creators = 1 log-bin = /usr/local/mysql/data/mysql-bin.log log-bin-index = /usr/local/mysql/data/master-log-bin.index log-error = /usr/local/mysql/data/master-error.log relay-log = /usr/local/mysql/data/slave-relay.log relay-log-info-file = /usr/local/mysql/data/slave-relay-log.info relay-log-index</description></item><item><title>alisql的编译安装</title><link>/mb/post/alisql/alisql%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 04 Nov 2016 16:18:28 +0000</pubDate><guid>/mb/post/alisql/alisql%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</guid><description>专业阿里编译 请参考：alisql编译 写在前面 适用环境：mac os x(unix), linux 等 2016年阿里的云栖大会上，开源了alisql，称双11就是alisql的成功案例。而且还说vs mysql 5.7 ,性能有70%的提升。 不管真的假</description></item><item><title>mysql读写分离,中间件用mycat</title><link>/mb/post/mysql/mysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB-%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%94%A8mycat/</link><pubDate>Fri, 04 Nov 2016 16:01:17 +0000</pubDate><guid>/mb/post/mysql/mysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB-%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%94%A8mycat/</guid><description>首先，数据库的读写分离，能让应用对数据库的访问压力下降，较之一台数据库服务器来读写的时候。 2台数据库服务器，1台用来执行写操作，1台用来执行读操作，这样能够分散应用对数据的压力，而且能加强数据库的数据</description></item></channel></rss>