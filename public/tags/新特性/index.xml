<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>新特性 on 程序猫大刚</title><link>/mb/tags/%E6%96%B0%E7%89%B9%E6%80%A7/</link><description>Recent content in 新特性 on 程序猫大刚</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 24 Nov 2022 13:54:02 +0800</lastBuildDate><atom:link href="/mb/tags/%E6%96%B0%E7%89%B9%E6%80%A7/index.xml" rel="self" type="application/rss+xml"/><item><title>java8新特性使用</title><link>/mb/post/java/java8%E6%96%B0%E7%89%B9%E6%80%A7%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 24 Nov 2022 13:54:02 +0800</pubDate><guid>/mb/post/java/java8%E6%96%B0%E7%89%B9%E6%80%A7%E4%BD%BF%E7%94%A8/</guid><description>Stream api2 Collect to Map 1 2 3 Map&amp;lt;String, String&amp;gt; result = effectList.stream().collect( Collectors.toMap(BusiDisposalProveEffectInfo::getDeclareId, BusiDisposalProveEffectInfo::getRegAttachmentId)); Collect to List or Set 1 List&amp;lt;String&amp;gt; idList = resultList.stream().map(BusiDisposalProveListVO::getId).collect(Collectors.toList()); Filter 1 2 3 4 Set&amp;lt;String&amp;gt; idSet = resultList.stream() .filter(e -&amp;gt; StringUtils.equals(e.getStatus(), DeclareStatusEnum.SUCCESS.getCode())) .map(BusiDisposalProveListVO::getId) .collect(Collectors.toSet()); Consumer 1 2 3 4 5 6 7 8 // 相加并将结果回调回去 public void f1(int a,int b,Consumer&amp;lt;Integer&amp;gt; callback){ callback.accept(a+b); } // 调用并打印 f1(1,2,result -&amp;gt; { System.out.println(result); })</description></item></channel></rss>